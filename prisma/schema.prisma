generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

model Category {
  id        Int @id @default(autoincrement())
  name      String
  quizzes Quiz[]
}

model Language {
  id        Int @id @default(autoincrement())
  code      String @unique
  name      String
  quizzes   QuizTranslation[]
  questions QuestionTranslation[]
  options   QuestionOptionTranslation[]
}

model Quiz {
  id          Int @id @default(autoincrement())
  icon        String
  iconBgHex   String @default("#E0E0E0")
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  questions   Question[]
  translations QuizTranslation[]
}

model QuizTranslation {
  id        Int @id @default(autoincrement())
  title     String
  quiz      Quiz @relation(fields: [quizId], references: [id])
  quizId    Int
  language  Language @relation(fields: [languageId], references: [id])
  languageId Int
}

model Question {
  id        Int @id @default(autoincrement())
  quiz      Quiz @relation(fields: [quizId], references: [id])
  quizId    Int
  options   QuestionOption[]
  translations QuestionTranslation[]
}

model QuestionTranslation {
  id        Int @id @default(autoincrement())
  description  String
  questionId Int
  question  Question @relation(fields: [questionId], references: [id])
  language  Language @relation(fields: [languageId], references: [id])
  languageId Int
}

model QuestionOption {
  id        Int @id @default(autoincrement())
  question  Question @relation(fields: [questionId], references: [id])
  questionId Int
  isCorrect Boolean
  translations QuestionOptionTranslation[]
}

model QuestionOptionTranslation {
  id        Int @id @default(autoincrement())
  option    String
  questionOptionId Int
  questionOption QuestionOption @relation(fields: [questionOptionId], references: [id])
  language  Language @relation(fields: [languageId], references: [id])
  languageId Int
}
